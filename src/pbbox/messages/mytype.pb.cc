// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mytype.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mytype.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MyType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyType_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mytype_2eproto() {
  protobuf_AddDesc_mytype_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mytype.proto");
  GOOGLE_CHECK(file != NULL);
  MyType_descriptor_ = file->message_type(0);
  static const int MyType_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyType, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyType, longid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyType, strmessage_),
  };
  MyType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyType_descriptor_,
      MyType::default_instance_,
      MyType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyType, _has_bits_[0]),
      -1,
      -1,
      sizeof(MyType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyType, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mytype_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyType_descriptor_, &MyType::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mytype_2eproto() {
  delete MyType::default_instance_;
  delete MyType_reflection_;
}

void protobuf_AddDesc_mytype_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014mytype.proto\"8\n\006MyType\022\n\n\002id\030\001 \002(\005\022\016\n\006"
    "longId\030\002 \002(\003\022\022\n\nStrMessage\030\003 \001(\014", 72);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mytype.proto", &protobuf_RegisterTypes);
  MyType::default_instance_ = new MyType();
  MyType::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mytype_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mytype_2eproto {
  StaticDescriptorInitializer_mytype_2eproto() {
    protobuf_AddDesc_mytype_2eproto();
  }
} static_descriptor_initializer_mytype_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int MyType::kIdFieldNumber;
const int MyType::kLongIdFieldNumber;
const int MyType::kStrMessageFieldNumber;
#endif  // !_MSC_VER

MyType::MyType()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MyType)
}

void MyType::InitAsDefaultInstance() {
}

MyType::MyType(const MyType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MyType)
}

void MyType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  longid_ = GOOGLE_LONGLONG(0);
  strmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MyType::~MyType() {
  // @@protoc_insertion_point(destructor:MyType)
  SharedDtor();
}

void MyType::SharedDtor() {
  strmessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MyType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyType_descriptor_;
}

const MyType& MyType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mytype_2eproto();
  return *default_instance_;
}

MyType* MyType::default_instance_ = NULL;

MyType* MyType::New(::google::protobuf::Arena* arena) const {
  MyType* n = new MyType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyType::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    id_ = 0;
    longid_ = GOOGLE_LONGLONG(0);
    if (has_strmessage()) {
      strmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MyType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MyType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_longId;
        break;
      }

      // required int64 longId = 2;
      case 2: {
        if (tag == 16) {
         parse_longId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &longid_)));
          set_has_longid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_StrMessage;
        break;
      }

      // optional bytes StrMessage = 3;
      case 3: {
        if (tag == 26) {
         parse_StrMessage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_strmessage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MyType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MyType)
  return false;
#undef DO_
}

void MyType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MyType)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int64 longId = 2;
  if (has_longid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->longid(), output);
  }

  // optional bytes StrMessage = 3;
  if (has_strmessage()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->strmessage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MyType)
}

::google::protobuf::uint8* MyType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MyType)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int64 longId = 2;
  if (has_longid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->longid(), target);
  }

  // optional bytes StrMessage = 3;
  if (has_strmessage()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->strmessage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MyType)
  return target;
}

int MyType::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_longid()) {
    // required int64 longId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->longid());
  }

  return total_size;
}
int MyType::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int64 longId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->longid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes StrMessage = 3;
  if (has_strmessage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->strmessage());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyType::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MyType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MyType::MergeFrom(const MyType& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_longid()) {
      set_longid(from.longid());
    }
    if (from.has_strmessage()) {
      set_has_strmessage();
      strmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strmessage_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MyType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyType::CopyFrom(const MyType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MyType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MyType::Swap(MyType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyType::InternalSwap(MyType* other) {
  std::swap(id_, other->id_);
  std::swap(longid_, other->longid_);
  strmessage_.Swap(&other->strmessage_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyType_descriptor_;
  metadata.reflection = MyType_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
